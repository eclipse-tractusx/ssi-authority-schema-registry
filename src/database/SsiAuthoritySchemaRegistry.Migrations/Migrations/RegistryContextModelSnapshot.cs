// <auto-generated />
/********************************************************************************
 * Copyright (c) 2024 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Apache License, Version 2.0 which is available at
 * https://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 ********************************************************************************/

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities;

#nullable disable

namespace Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Migrations.Migrations
{
    [DbContext(typeof(RegistryContext))]
    partial class RegistryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ssi-authority-schema-registry")
                .UseCollation("en_US.utf8")
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Authority", b =>
                {
                    b.Property<string>("Bpn")
                        .HasColumnType("text")
                        .HasColumnName("bpn");

                    b.HasKey("Bpn")
                        .HasName("pk_authorities");

                    b.ToTable("authorities", "ssi-authority-schema-registry");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Credential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasColumnName("type_id");

                    b.HasKey("Id")
                        .HasName("pk_credentials");

                    b.HasIndex("TypeId")
                        .HasDatabaseName("ix_credentials_type_id");

                    b.ToTable("credentials", "ssi-authority-schema-registry");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.CredentialAuthority", b =>
                {
                    b.Property<Guid>("CredentialId")
                        .HasColumnType("uuid")
                        .HasColumnName("credential_id");

                    b.Property<string>("Bpn")
                        .HasColumnType("text")
                        .HasColumnName("bpn");

                    b.HasKey("CredentialId", "Bpn")
                        .HasName("pk_credential_authorities");

                    b.HasIndex("Bpn")
                        .HasDatabaseName("ix_credential_authorities_bpn");

                    b.ToTable("credential_authorities", "ssi-authority-schema-registry");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.CredentialType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("label");

                    b.HasKey("Id")
                        .HasName("pk_credential_types");

                    b.ToTable("credential_types", "ssi-authority-schema-registry");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "BusinessPartnerNumber"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Membership"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Framework"
                        },
                        new
                        {
                            Id = 4,
                            Label = "CompanyRole"
                        });
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Credential", b =>
                {
                    b.HasOne("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.CredentialType", "Type")
                        .WithMany("Credentials")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_credentials_credential_types_type_id");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.CredentialAuthority", b =>
                {
                    b.HasOne("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Authority", "Authority")
                        .WithMany("CredentialAuthorities")
                        .HasForeignKey("Bpn")
                        .IsRequired()
                        .HasConstraintName("fk_credential_authorities_authorities_bpn");

                    b.HasOne("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Credential", "Credential")
                        .WithMany("Authorities")
                        .HasForeignKey("CredentialId")
                        .IsRequired()
                        .HasConstraintName("fk_credential_authorities_credentials_credential_id");

                    b.Navigation("Authority");

                    b.Navigation("Credential");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Authority", b =>
                {
                    b.Navigation("CredentialAuthorities");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.Credential", b =>
                {
                    b.Navigation("Authorities");
                });

            modelBuilder.Entity("Org.Eclipse.TractusX.SsiAuthoritySchemaRegistry.Entities.Entities.CredentialType", b =>
                {
                    b.Navigation("Credentials");
                });
#pragma warning restore 612, 618
        }
    }
}
